---
title: "Causal Reasoning of LLMs"
format: html 
editor: visual
lang: de
author: 
  - name: "Lucas Mandelik"
    affiliation: "HWI Hamburg"
    email: "lucas.mandelik@studium.uni-hamburg.de"
  - name: "Alexander Lorenz"
    affiliation: "HWI Hamburg"
    email: "alexander.lorenz@studium.uni-hamburg.de"
  - name: "Jannik Svenson"
    affiliation: "HWI Hamburg"
    email: "jannik.svenson@studium.uni-hamburg.de"
date: "30. Juni 2024"

---
<!-- format: pptx -->
AKTUALISIERUNGSDATUM <br>
24. Juni 2024


## Inhaltsverzeichnis
1. [Einleitung](#einleitung)
2. [Grundlagen](#grundlagen)
3. [Parrots Paradox](#parrotsparadox)
4. [Beitrag](#beitrag)
5. [Schlussbetrachtung](#schlussbetrachtung)
6. [Lizenz](#lizenz)

## Einleitung
Eine detailliertere Beschreibung des Projekts, seiner Ziele und Funktionen.

## Grundlagen
Zuerst kann einmal festgehalten werden, dass wir uns im folgenden hauptsächlich mit dem nachfolgenden oft debattierten Paper: XXXXX beschäftigen.

## ParrotsParadox
Einige Nutzer von LLMs haben bemerkt, dass LLMs nicht zwingend immer Kausalität erkennen können und sie z.B. auf einfache kausale Fragen falsch antworten.

## Beitrag
hier evtl. Haupteil

### Subsection 01

Hallo

### Subsection 02

Tschüss

## Schlussbetrachtung
eventuell elegant abschließen?


## Testing Ground
In diesem Dokument wird ein LaTeX-Dokument in Quarto eingebunden.

```{verbatim}
\documentclass{article}
\usepackage{lipsum} % Beispieltextpaket

\title{Beispiel LaTeX Dokument}
\author{Autor Name}
\date{\today}

\begin{document}

\maketitle

\section{Einleitung}
\lipsum[1-2] % Beispieltext

\section{Hauptteil}
\lipsum[3-4] % Beispieltext

\end{document}
```

{include, file="latex_files/test.tex", raw=true}


\begin{tabular}{|l|l|}\hline
Age & Frequency \\ \hline
18--25  & 15 \\
26--35  & 33 \\
36--45  & 22 \\ \hline
\end{tabular}


## Spaß über LLMs vor GAI
[ChatGPT Failures](https://github.com/giuven95/chatgpt-failures.git)

# demo stuff


\vspace{30pt}
## Quarto

Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see <https://quarto.org>.

## Running Code

When you click the **Render** button a document will be generated that includes both content and the output of embedded code. You can embed code like this:

```{r}
1 + 1
```


You can add options to executable code like this

```{r}
#| echo: false
2 * 2
```

The `echo: false` option disables the printing of code (only output is displayed).


## Include figures

You can also include some figures, for example 

![](figures/logo.png){width=50%}


## Load data 

You can load data using relative paths. Here we load data from the subdirectory `data`

```{r}
load("data/experiment_data_counterfactual.rda")
head(df)
```


## Load R code 


```{r}
# Load the R code in the file `R/my_function.R"
source("R/my_function.R")

set.seed(1234)
x <- draw(10)
print(x)
```
<!-- Text -->

